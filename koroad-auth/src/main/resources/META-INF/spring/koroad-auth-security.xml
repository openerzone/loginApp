<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Security Configuration -->
    <security:http auto-config="true" use-expressions="true">
        <!-- Login Configuration -->
        <security:form-login 
            login-page="/auth/login"
            login-processing-url="/auth/submit"
            username-parameter="username"
            password-parameter="password"
            authentication-success-handler-ref="authenticationSuccessHandler" 
            authentication-failure-handler-ref="authenticationFailureHandler" />  

        <!-- 로그아웃 설정 -->
        <security:logout
            logout-url="/auth/logout"      
            success-handler-ref="logoutSuccessHandler" />
        
        <!-- 비밀번호 변경 필요 필터 (인증 후 가장 먼저 실행) -->
        <security:custom-filter ref="passwordChangeRequiredFilter" after="BASIC_AUTH_FILTER" />
        
        <!-- OTP 인증 대기 상태 필터 (비밀번호 변경 필터 이후 실행) -->
        <security:custom-filter ref="otpPendingFilter" before="FILTER_SECURITY_INTERCEPTOR" />
                         
		<!-- URL Pattern Access Control -->
		<security:intercept-url pattern="/auth/login" access="permitAll()" />
		<security:intercept-url pattern="/auth/logout" access="isAuthenticated()" />
		<security:intercept-url pattern="/auth/otp" access="isAuthenticated()" />
		<security:intercept-url pattern="/auth/otp/verify" access="isAuthenticated()" />
		<security:intercept-url pattern="/auth/otp/resend" access="isAuthenticated()" />
		<security:intercept-url pattern="/auth/change-password" access="isAuthenticated()" />
		<security:intercept-url pattern="/auth/change-password/process" access="isAuthenticated()" />
        <security:intercept-url pattern="/static/**" access="permitAll()" />
		<security:intercept-url pattern="/**" access="permitAll()" />
		
		<security:csrf />
    </security:http>

    <!-- Authentication Manager -->
    <security:authentication-manager>
        <!-- Custom AuthenticationProvider 사용 (ID를 salt로 사용하는 비밀번호 검증) -->
        <security:authentication-provider ref="koroadAuthenticationProvider" />
    </security:authentication-manager>
    
    <!-- EgovPasswordEncoder: EgovFileScrty.encryptPassword 메소드를 사용하는 인코더 -->
	<bean id="passwordEncoder" class="kr.or.koroad.auth.util.EgovPasswordEncoder" />
	
	<!-- Custom AuthenticationProvider: 사용자 ID를 salt로 사용하는 비밀번호 검증 -->
	<bean id="koroadAuthenticationProvider" class="kr.or.koroad.auth.security.KoroadDaoAuthenticationProvider">
		<constructor-arg ref="passwordEncoder" />
		<property name="userDetailsService" ref="allbaroUserDetailsService" />
	</bean>
	
	<!-- OTP 서비스 -->
	<bean id="otpService" class="kr.or.koroad.auth.service.OtpService" />
	
	<!-- OTP 인증 대기 상태 필터 -->
	<bean id="otpPendingFilter" class="kr.or.koroad.auth.filter.OtpPendingFilter">
		<property name="otpPageUrl" value="/auth/otp" />
		<property name="otpVerifyUrl" value="/auth/otp/verify" />
		<property name="otpResendUrl" value="/auth/otp/resend" />
		<property name="logoutUrl" value="/auth/logout" />
	</bean>
	
	<!-- 비밀번호 변경 필요 필터 -->
	<bean id="passwordChangeRequiredFilter" class="kr.or.koroad.auth.filter.PasswordChangeRequiredFilter">
		<property name="changePasswordUrl" value="/auth/change-password" />
		<property name="changePasswordProcessUrl" value="/auth/change-password/process" />
		<property name="logoutUrl" value="/auth/logout" />
	</bean>
		
	<!-- Custom AuthenticationSuccessHandler: 인증 성공 후 OTP 화면으로 이동 -->
	<bean id="authenticationSuccessHandler" class="kr.or.koroad.auth.handler.OtpAuthenticationSuccessHandler">
		<property name="otpPageUrl" value="/auth/otp" />
	</bean>
		
	<!-- Custom AuthenticationFailureHandler: 인증 실패 이후 추가적인 작업 처리 -->
	<bean id="authenticationFailureHandler" class="kr.or.koroad.auth.handler.KoroadAuthenticationFailureHandler">
		<property name="changePasswordUrl" value="/auth/change-password" />
	</bean>

	<bean id="logoutSuccessHandler" 
	      class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
	    <property name="defaultTargetUrl" value="/auth/login?logout" />
	</bean>
</beans>